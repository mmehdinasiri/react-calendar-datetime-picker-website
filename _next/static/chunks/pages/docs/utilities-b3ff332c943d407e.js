(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3],{52315:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/utilities",function(){return t(52292)}])},79068:function(n,e,t){"use strict";t.d(e,{BS:function(){return k},CN:function(){return x},GF:function(){return h},Hf:function(){return r},UR:function(){return m},V4:function(){return l},dh:function(){return g},dn:function(){return o},e6:function(){return f},eI:function(){return P},hr:function(){return s},p_:function(){return a},qB:function(){return d},qx:function(){return u},sj:function(){return c},tk:function(){return y},vP:function(){return C},vf:function(){return p},wn:function(){return i},xC:function(){return D}});var a="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n    />\n  )\n}\nexport default DatePicker\n",r="\nconst DatePicker = () => {\n  const [date, setDate] = useState({ year: 2019, month: 3, day: 20 })\n  return (\n    <DtPicker\n      onChange={setDate}\n      initValue={date}\n    />\n  )\n}\nexport default DatePicker\n",s="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  const updateInitValue = () => {\n    setDate({\n      year: 2020,\n      month: 12,\n      day: 25\n    })\n  }\n  return (\n    <button onClick={updateInitValue} >\n      Update init value\n    </button>\n    <DtPicker\n      onChange={setDate}\n      initValue={date}\n    />\n  )\n}\nexport default DatePicker\n",o='\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      local="fa"\n      showWeekend\n    />\n  )\n}\nexport default DatePicker\n',l="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      type='range'\n    />\n  )\n}\nexport default DatePicker\n",c="\nconst DatePicker = () => {\n  const defaultValue = {\n    from: { year: 2012, month: 5, day: 2 },\n    to: { year: 2012, month: 5, day: 23 }\n  }\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      initValue={defaultValue}\n      type='range'\n    />\n  )\n}\nexport default DatePicker\n",i="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      type='multi'\n    />\n  )\n}\nexport default DatePicker\n",u="\nconst DatePicker = () => {\n  const defaultValue = {[\n    {\n      year: 2012,\n      month: 5,\n      day: 29,\n      hour: 18,\n      minute: 11\n    },\n    {\n      year: 2012,\n      month: 5,\n      day: 2,\n      hour: 18,\n      minute: 11\n    },\n    {\n      year: 2012,\n      month: 6,\n      day: 3,\n      hour: 18,\n      minute: 11\n    }\n  ]}\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      initValue={defaultValue}\n      type='multi'\n    />\n  )\n}\nexport default DatePicker\n",d="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      withTime\n      showTimeInput //just show time in input\n    />\n  )\n}\nexport default DatePicker\n",D="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      showWeekend\n      clearBtn\n      todayBtn\n      yearListStyle='list'\n    />\n  )\n}\nexport default DatePicker\n",h="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  const handleCalendarChange = (newDate: any) => {\n    console.log(newDate)\n    console.log('Calendar changed')\n  }\n  const handleCalendarClose = () => {\n    console.log('Calendar closed')\n  }\n  const handleCalendarOpen = () => {\n    console.log('Calendar opened')\n  }\n  return (\n    <DtPicker\n      initValue={date}\n      onChange={setDate}\n      onCalenderChange={handleCalendarChange}\n      onCalenderShow={handleCalendarOpen}\n      onCalenderHide={handleCalendarClose}\n    />\n  )\n}\nexport default DatePicker\n",f="\nconst DatePicker = () => {\nconst maxDate = {\n    year: 2016,\n    month: 6,\n    day: 23\n  }\n  const minDate = {\n    year: 2012,\n    month: 5,\n    day: 2\n  }\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      minDate={minDate}\n      maxDate={maxDate}\n    />\n  )\n}\nexport default DatePicker\n",m="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  const disabledDates = [\n    {\n      year: 2015,\n      month: 6,\n      day: 23\n    },\n    {\n      year: 2015,\n      month: 6,\n      day: 12\n    },\n    {\n      year: 2015,\n      month: 6,\n      day: 10\n    }\n  ]\n  return (\n    <DtPicker\n      onChange={setDate}\n      disabledDates={disabledDatesList}\n      minDate={minDate}\n      maxDate={maxDate}\n    />\n  )\n}\nexport default DatePicker\n",k="\nimport { DtPicker } from 'react-calendar-datetime-picker'\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      autoClose={false}\n    />\n  )\n}\nexport default DatePicker\n",p="\nimport  { DtCalendar } from 'react-calendar-datetime-picker'\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtCalendar\n      onChange={setDate}\n    />\n  )\n}\nexport default DatePicker\n",x="\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <DtPicker\n      onChange={setDate}\n      NextBtnIcon={arrowRight}\n      PreviousBtnIcon={arrowLeft}\n      placeholder='select date'\n      fromLabel='From date'\n      toLabel='To date'\n      type='range'\n      inputClass='custom-input'\n      daysClass='custom-days'\n      headerClass='custom-header'\n    />\n  )\n}\nexport default DatePicker\n",g="\n.custom-input {\n  text-align: right;\n  color: #009a17;\n  height: 46px !important;\n  line-height: 46px !important;\n  &::placeholder {\n    color: #009a17;\n  }\n}\n.custom-days {\n  background-color: #c8daff;\n  .is-week-days {\n    color: #d20000;\n  }\n  .is-disabled {\n    color: #444;\n  }\n}\n.custom-header {\n  background-color: #538bff;\n}\n",P="\nimport { DtPicker, convertToFa } from 'react-calendar-datetime-picker'\n\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <div>\n      <DtPicker\n        onChange={setDate}\n      />\n      <p>{convertToFa(date)}</p>\n    </div>\n  )\n}\nexport default DatePicker\n",y="\nimport { DtPicker, convertToEn } from 'react-calendar-datetime-picker'\n\nconst DatePicker = () => {\n  const [date, setDate] = useState(null)\n  return (\n    <div>\n      <DtPicker\n        onChange={setDate}\n        withTime\n        local=\"fa\"\n      />\n      <p>{convertToEn(date,'-')}</p>\n    </div>\n  )\n}\nexport default DatePicker\n",C="\nimport { DtPicker, Day, Range, Multi } from 'react-calendar-datetime-picker'\n\nconst DatePicker = () => {\n  const [date, setDate] = useState<Day>(null)\n  const [dateRange, setDateRange] = useState<Range>(null)\n  const [dateMulti, setDateMulti] = useState<Multi>(null)\n\n  return (\n    <div>\n      <DtPicker\n        onChange={setDate}\n        type=\"single\"\n        placeholder='select single day'\n      />\n      <DtPicker\n        onChange={setDateRange}\n        type=\"range\"\n        placeholder='select range of days'\n      />\n      <DtPicker\n        onChange={setDateMulti}\n        type='multi'\n        placeholder='select multi days'\n      />\n    </div>\n  )\n}\nexport default DatePicker\n"},52292:function(n,e,t){"use strict";t.r(e);var a=t(85893),r=t(67294),s=t(6437),o=t(79241),l=t(79068),c=t(52775),i=t(5152),u=t.n(i)()((function(){return t.e(974).then(t.bind(t,66974))}),{loadableGenerated:{webpack:function(){return[66974]}},ssr:!1});e.default=function(){var n=(0,r.useState)(null),e=n[0],t=n[1],i=(0,r.useState)(null),d=i[0],D=i[1];return(0,a.jsx)(s.RY,{children:(0,a.jsxs)("section",{className:"",children:[(0,a.jsx)("h1",{className:"text-3xl mb-6",children:"Utilities:"}),(0,a.jsxs)("p",{className:"text-lg",children:["One can import and use these two functions to convert Gregorian date to Jalali date and vice versa.",(0,a.jsx)("br",{}),"These functions accept date object as the first argument and divider sign as the second argument ('/' is the default value)."]}),(0,a.jsxs)("div",{className:"mt-10",children:[(0,a.jsxs)("div",{className:"mb-10 pb-4 border-b border-primary border-opacity-50 ",children:[(0,a.jsx)("h3",{id:"selectSingleDay",className:"text-2xl font-bold mb-4 scroll-offset font-semibold",children:"convertToFa( dateObj, '/' )"}),(0,a.jsxs)("div",{className:"block xl:flex ",children:[(0,a.jsx)("div",{className:"w-2/2 lg:w-3/4 xl:w-1/2 pr-10 mb-4 xl:mb-0",children:(0,a.jsx)(u,{className:"rounded",style:o.Z,language:"javascript",children:l.eI})}),(0,a.jsxs)("div",{className:"w-2/2 lg:w-1/4 xl:w-1/2",children:[(0,a.jsx)(c.jd,{onChange:t}),"value: ",(0,a.jsx)("pre",{children:JSON.stringify(e,null,2)}),(0,a.jsx)("br",{}),"converted value:",(0,a.jsx)("pre",{children:JSON.stringify((0,c.Hc)(e),null,2)})]})]})]}),(0,a.jsxs)("div",{className:"mb-10 pb-4",children:[(0,a.jsx)("h3",{id:"selectSingleDay",className:"text-2xl font-bold mb-4 scroll-offset font-semibold",children:"convertToEn(dateObj, '-')"}),(0,a.jsxs)("div",{className:"block xl:flex ",children:[(0,a.jsx)("div",{className:"w-2/2 lg:w-3/4 xl:w-1/2 pr-10 mb-4 xl:mb-0",children:(0,a.jsx)(u,{className:"rounded",style:o.Z,language:"javascript",children:l.tk})}),(0,a.jsxs)("div",{className:"w-2/2 lg:w-1/4 xl:w-1/2",children:[(0,a.jsx)(c.jd,{onChange:D,withTime:!0,local:"fa"}),"value: ",(0,a.jsx)("pre",{children:JSON.stringify(d,null,2)}),(0,a.jsx)("br",{}),"converted value:",(0,a.jsx)("pre",{children:JSON.stringify((0,c.w8)(d,"-"),null,2)})]})]})]})]})]})})}}},function(n){n.O(0,[424,775,707,774,888,179],(function(){return e=52315,n(n.s=e);var e}));var e=n.O();_N_E=e}]);